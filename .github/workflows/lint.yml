name: Linting

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.toml'
      - '.flake8'
  # Remove pull_request trigger - validate-changes.yml handles this now
  # Allow this workflow to be called by other workflows
  workflow_call:
  workflow_dispatch:

jobs:
  # Job to get Python versions for the matrix
  get-python-versions:
    runs-on: ubuntu-latest
    outputs:
      python-versions: ${{ steps.get-versions.outputs.value }} # Output the raw JSON string
    steps:
      - uses: actions/checkout@v3
      - name: Get Python versions from pyproject.toml
        id: get-versions
        uses: SebRollen/toml-action@v1.2.0
        with:
          file: 'pyproject.toml'
          field: 'tool.pywrapid.ci.python-versions' # Read the list
          raw: true # Get the output as a raw JSON string suitable for fromJSON

  lint:
    needs: get-python-versions # Depend on the job that gets versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Create a matrix based on the versions from pyproject.toml
        python-version: ${{ fromJSON(needs.get-python-versions.outputs.python-versions) }}
      fail-fast: false # Allow all matrix jobs to finish

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          # Use the Python version from the matrix
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install linters and project dependencies
          pip install flake8 pylint mypy black isort
          pip install -e .[all] # Install project with all extras

      - name: Run flake8
        run: flake8 src tests

      - name: Run pylint
        run: pylint src tests

      - name: Run mypy
        run: mypy src

      - name: Check formatting with black
        run: black --check src tests

      - name: Check import sorting
        run: isort --check-only --profile black src tests
